{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This lib is used to manage ch395 chip for 6502 cpu</p>"},{"location":"assembly/","title":"Assembly","text":""},{"location":"assembly/#assembly","title":"Assembly","text":""},{"location":"assembly/#ch395_check_exist","title":"ch395_check_exist","text":"<p>Description</p> <p>Checks if ch395 exists</p> <p>Example</p> <pre><code> jsr ch395_get_glob_int_status\ncmp #CH395_DETECTED\nbeq ch395_connected\nrts\nch395_connected:\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : Returns #AA if it exists</li> </ul>"},{"location":"assembly/#ch395_clear_recv_buf_sn","title":"ch395_clear_recv_buf_sn","text":"<p>Description</p> <p>Clear receive buffer</p> <p>Example</p> <pre><code> lda #$01 ; Socket ID\njsr ch395_clear_recv_buf_sn\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> </ul>"},{"location":"assembly/#ch395_close_socket_sn","title":"ch395_close_socket_sn","text":"<p>Description</p> <p>Close socket</p> <p>Example</p> <pre><code> lda #$01 ; Socket ID\njsr ch395_close_socket_sn\n</code></pre> <p>Input</p> <ul> <li>Accumulator : The id of the socket to close</li> </ul> <p>Modify</p> <ul> <li>Y Register </li> </ul>"},{"location":"assembly/#ch395_dhcp_enable","title":"ch395_dhcp_enable","text":"<p>Description</p> <p>Enable or not dhcp</p> <p>Input</p> <ul> <li>Accumulator : The mode to activate DHCP mode</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul>"},{"location":"assembly/#ch395_get_cmd_status","title":"ch395_get_cmd_status","text":"<p>Description</p> <p>Get cmd status</p> <p>Example</p> <pre><code> jsr ch395_get_cmd_status\n; Check A for STATUS\nrts\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"assembly/#ch395_get_dhcp_status","title":"ch395_get_dhcp_status","text":"<p>Description</p> <p>Get dhcp status</p> <p>Example</p> <pre><code> jsr ch395_get_dhcp_status\n; Check A for dhcp status\nrts\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"assembly/#ch395_get_glob_int_status","title":"ch395_get_glob_int_status","text":"<p>Description</p> <p>Get General interrupt Status</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Example</p> <pre><code> jsr ch395_get_glob_int_status\n; check accumulator to get interrupts states\n</code></pre>"},{"location":"assembly/#ch395_get_ic_ver","title":"ch395_get_ic_ver","text":"<p>Description</p> <p>Get ch395 firmware version</p> <p>Example</p> <pre><code> jsr ch395_get_ic_ver\n; Check A for version\nrts\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"assembly/#ch395_get_int_status_sn","title":"ch395_get_int_status_sn","text":"<p>Description</p> <p>Check interrupt socket status</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> </ul> <p>Returns</p> <ul> <li>Accumulator : Status of selected socket</li> </ul> <p>Example</p> <pre><code> lda #CH395_SOCKET1 ; Check socket 1\njsr ch395_get_int_status_sn\n; Check interrupt type\nrts\n</code></pre>"},{"location":"assembly/#ch395_get_ip_inf","title":"ch395_get_ip_inf","text":"<p>Description</p> <p>Get ip info</p> <p>Input</p> <ul> <li>Accumulator : the ptr to modify</li> <li>X Register : the ptr to modify</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul>"},{"location":"assembly/#ch395_get_mac_adress","title":"ch395_get_mac_adress","text":"<p>Description</p> <p>Get mac address</p> <p>Input</p> <ul> <li>Accumulator : the ptr</li> <li>X Register : the ptr</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : the content of ptr modified</p> </li> <li> <p>X Register : the content of ptr modified</p> </li> </ul>"},{"location":"assembly/#ch395_get_phy_status","title":"ch395_get_phy_status","text":"<p>Description</p> <p>Get physical status</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : The physical status</li> </ul> <p>Example</p> <pre><code> jsr ch395_get_phy_status\n; Check A physical status\nrts\n</code></pre>"},{"location":"assembly/#ch395_get_recv_len_sn","title":"ch395_get_recv_len_sn","text":"<p>Description</p> <p>Get the length received from socket</p> <p>Example</p> <pre><code> lda #$01 ; Socket 1\njsr ch395_get_recv_len_sn\n; check A and X for length received\nch395_connected:\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : The length</p> </li> <li> <p>X Register : The length</p> </li> </ul>"},{"location":"assembly/#ch395_get_remot_ipp_sn","title":"ch395_get_remot_ipp_sn","text":"<p>Description</p> <p>Get remote ip connected to the socket</p> <p>Input</p> <ul> <li>Accumulator : The Socket for the ip to get</li> <li>X Register : The ptr (high) to store the ip</li> <li>Y Register : The ptr (low) to store the ip</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul>"},{"location":"assembly/#ch395_get_socket_status_sn","title":"ch395_get_socket_status_sn","text":"<p>Description</p> <p>Returns in A socket status (close/open)</p> <p>Modify</p> <ul> <li>X Register </li> <li>Accumulator </li> </ul>"},{"location":"assembly/#ch395_init","title":"ch395_init","text":"<p>Description</p> <p>Initialize ch395</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"assembly/#ch395_open_socket_sn","title":"ch395_open_socket_sn","text":"<p>Description</p> <p>Open socket from arg</p> <p>Input</p> <ul> <li>Accumulator : Socket id</li> </ul> <p>Modify</p> <ul> <li>Y Register </li> </ul>"},{"location":"assembly/#ch395_read_recv_buf_sn","title":"ch395_read_recv_buf_sn","text":""},{"location":"assembly/#ch395_reset_all","title":"ch395_reset_all","text":"<p>Description</p> <p>Reset ch395</p> <p>Example</p> <pre><code> jsr ch395_reset_all\n; Wait a bit\n</code></pre>"},{"location":"assembly/#ch395_retran_period","title":"ch395_retran_period","text":"<p>Description</p> <p>Retran period</p> <p>Example</p> <pre><code> lda #$FF\nldx #$FF\njsr ch395_retran_period\nrts\n</code></pre> <p>Input</p> <ul> <li>Accumulator : Period </li> <li>X Register : Period </li> </ul> <p>Modify</p> <ul> <li>Y Register </li> </ul>"},{"location":"assembly/#ch395_set_des_port_sn","title":"ch395_set_des_port_sn","text":""},{"location":"assembly/#ch395_set_fun_para","title":"ch395_set_fun_para","text":"<p>Input</p> <ul> <li>Accumulator : Value </li> </ul> <p>Modify</p> <ul> <li>Y Register </li> <li>Accumulator </li> </ul>"},{"location":"assembly/#ch395_set_gwip_addr","title":"ch395_set_gwip_addr","text":""},{"location":"assembly/#ch395_set_ip_addr","title":"ch395_set_ip_addr","text":"<p>Description</p> <p>Set ip addr</p>"},{"location":"assembly/#ch395_set_ip_addr_sn","title":"ch395_set_ip_addr_sn","text":"<p>Description</p> <p>Set Socket Ip address to connect with</p>"},{"location":"assembly/#ch395_set_ipraw_pro_sn","title":"ch395_set_ipraw_pro_sn","text":"<p>Description</p> <p>Set ipraw protocol on socket</p>"},{"location":"assembly/#ch395_set_mac_adress","title":"ch395_set_mac_adress","text":"<p>Description</p> <p>Set mac address</p>"},{"location":"assembly/#ch395_set_proto_type_sn","title":"ch395_set_proto_type_sn","text":""},{"location":"assembly/#ch395_set_retran_count","title":"ch395_set_retran_count","text":""},{"location":"assembly/#ch395_set_sour_port_sn","title":"ch395_set_sour_port_sn","text":""},{"location":"assembly/#ch395_tcp_connect_sn","title":"ch395_tcp_connect_sn","text":""},{"location":"assembly/#ch395_tcp_disconnect_sn","title":"ch395_tcp_disconnect_sn","text":""},{"location":"assembly/#ch395_tcp_listen_sn","title":"ch395_tcp_listen_sn","text":""},{"location":"assembly/#ch395_write_send_buf_sn","title":"ch395_write_send_buf_sn","text":""},{"location":"c/","title":"C","text":""},{"location":"c/#c","title":"C","text":""},{"location":"c/#unsigned-char-ch395_check_exist","title":"unsigned char ch395_check_exist();","text":""},{"location":"c/#void-ch395_clear_recv_buf_snunsigned-char-id_socket","title":"void ch395_clear_recv_buf_sn(unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Clear receive buffer</p>"},{"location":"c/#oid-ch395_close_socket_snunsigned-char-id_socket","title":"oid ch395_close_socket_sn(unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Close socket</p>"},{"location":"c/#unsigned-char-ch395_get_dhcp_status","title":"unsigned char ch395_get_dhcp_status();","text":"<p>Description</p> <p>Get dhcp status</p>"},{"location":"c/#unsigned-int-ch395_get_glob_int_status","title":"unsigned int ch395_get_glob_int_status();","text":"<p>Description</p> <p>Get General interrupt Status</p>"},{"location":"c/#unsigned-char-ch395_get_ic_ver","title":"unsigned char ch395_get_ic_ver();","text":"<p>Description</p> <p>Get ch395 firmware version</p>"},{"location":"c/#unsigned-char-ch395_get_int_status_snunsigned-char-id_socket","title":"unsigned char ch395_get_int_status_sn(unsigned char ID_SOCKET);","text":"<p>Description</p> <p>Check interrupt socket status</p>"},{"location":"c/#void-ch395_get_ip_infunsigned-char-ip_infos","title":"void ch395_get_ip_inf(unsigned char ip_infos[]);","text":"<p>Description</p> <p>Get ip info</p>"},{"location":"c/#void-ch395_get_mac_adressunsigned-char-macaddress","title":"void ch395_get_mac_adress(unsigned char macaddress[]);","text":"<p>Description</p> <p>Get mac address</p>"},{"location":"c/#unsigned-char-ch395_get_phy_status","title":"unsigned char ch395_get_phy_status();","text":"<p>Description</p> <p>Get physical status</p>"},{"location":"c/#void-ch395_get_recv_len_snunsigned-char-id_socket","title":"void ch395_get_recv_len_sn(unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Get the length received from socket</p>"},{"location":"c/#void-ch395_get_remot_ipp_snunsigned-char-ptr-unsigned-char-socket","title":"void ch395_get_remot_ipp_sn(unsigned char *ptr, unsigned char socket);","text":"<p>Description</p> <p>Get remote ip connected to the socket</p>"},{"location":"c/#unsigned-int-ch395_get_socket_status_snunsigned-char-id_socket","title":"unsigned int ch395_get_socket_status_sn(unsigned char ID_SOCKET);","text":""},{"location":"c/#void-ch395_init","title":"void ch395_init();","text":"<p>Description</p> <p>Initialize ch395</p>"},{"location":"c/#void-ch395_open_socket_snunsigned-char-id_socket","title":"void ch395_open_socket_sn(unsigned char ID_SOCKET)","text":""},{"location":"c/#void-ch395_read_recv_buf_snunsigned-char-buffer-unsigned-int-lengthunsigned-char-id_socket","title":"void ch395_read_recv_buf_sn(unsigned char *buffer, unsigned int length,unsigned char ID_SOCKET);","text":""},{"location":"c/#void-ch395_reset_all","title":"void ch395_reset_all()","text":"<p>Description</p> <p>Reset ch395</p>"},{"location":"c/#void-ch395_set_fun_paraunsigned-char-flag","title":"void ch395_set_fun_para(unsigned char flag)","text":"<p>Description</p> <p>Set ip addr</p>"},{"location":"c/#void-ch395_set_ip_addr_snunsigned-char-ip_addr-unsigned-char-id_socket","title":"void ch395_set_ip_addr_sn(unsigned char ip_addr[], unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Set ipraw protocol on socket</p>"},{"location":"c/#void-ch395_set_proto_type_snunsigned-char-protounsigned-char-id_socket","title":"void ch395_set_proto_type_sn(unsigned char proto,unsigned char ID_SOCKET)","text":""},{"location":"c/#_1","title":"C","text":""},{"location":"2024.1/assembly/","title":"Assembly","text":""},{"location":"2024.1/assembly/#assembly","title":"Assembly","text":""},{"location":"2024.1/assembly/#ch395_check_exist","title":"ch395_check_exist","text":"<p>Description</p> <p>Checks if ch395 exists</p> <p>Example</p> <pre><code> jsr ch395_get_glob_int_status\ncmp #CH395_DETECTED\nbeq ch395_connected\nrts\nch395_connected:\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : Returns #AA if it exists</li> </ul>"},{"location":"2024.1/assembly/#ch395_clear_recv_buf_sn","title":"ch395_clear_recv_buf_sn","text":"<p>Description</p> <p>Clear receive buffer</p> <p>Example</p> <pre><code> lda #$01 ; Socket ID\njsr ch395_clear_recv_buf_sn\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_close_socket_sn","title":"ch395_close_socket_sn","text":"<p>Description</p> <p>Close socket</p> <p>Example</p> <pre><code> lda #$01 ; Socket ID\njsr ch395_close_socket_sn\n</code></pre> <p>Input</p> <ul> <li>Accumulator : The id of the socket to close</li> </ul> <p>Modify</p> <ul> <li>Y Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_dhcp_enable","title":"ch395_dhcp_enable","text":"<p>Description</p> <p>Enable or not dhcp</p> <p>Input</p> <ul> <li>Accumulator : The mode to activate DHCP mode</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_cmd_status","title":"ch395_get_cmd_status","text":"<p>Description</p> <p>Get cmd status</p> <p>Example</p> <pre><code> jsr ch395_get_cmd_status\n; Check A for STATUS\nrts\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_dhcp_status","title":"ch395_get_dhcp_status","text":"<p>Description</p> <p>Get dhcp status</p> <p>Example</p> <pre><code> jsr ch395_get_dhcp_status\n; Check A for dhcp status\nrts\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_glob_int_status","title":"ch395_get_glob_int_status","text":"<p>Description</p> <p>Get General interrupt Status</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Example</p> <pre><code> jsr ch395_get_glob_int_status\n; check accumulator to get interrupts states\n</code></pre>"},{"location":"2024.1/assembly/#ch395_get_ic_ver","title":"ch395_get_ic_ver","text":"<p>Description</p> <p>Get ch395 firmware version</p> <p>Example</p> <pre><code> jsr ch395_get_ic_ver\n; Check A for version\nrts\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_int_status_sn","title":"ch395_get_int_status_sn","text":"<p>Description</p> <p>Check interrupt socket status</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> </ul> <p>Returns</p> <ul> <li>Accumulator : Status of selected socket</li> </ul> <p>Example</p> <pre><code> lda #CH395_SOCKET1 ; Check socket 1\njsr ch395_get_int_status_sn\n; Check interrupt type\nrts\n</code></pre>"},{"location":"2024.1/assembly/#ch395_get_ip_inf","title":"ch395_get_ip_inf","text":"<p>Description</p> <p>Get ip info</p> <p>Input</p> <ul> <li>Accumulator : the ptr to modify</li> <li>X Register : the ptr to modify</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_mac_adress","title":"ch395_get_mac_adress","text":"<p>Description</p> <p>Get mac address</p> <p>Input</p> <ul> <li>Accumulator : the ptr</li> <li>X Register : the ptr</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : the content of ptr modified</p> </li> <li> <p>X Register : the content of ptr modified</p> </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_phy_status","title":"ch395_get_phy_status","text":"<p>Description</p> <p>Get physical status</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : The physical status</li> </ul> <p>Example</p> <pre><code> jsr ch395_get_phy_status\n; Check A physical status\nrts\n</code></pre>"},{"location":"2024.1/assembly/#ch395_get_recv_len_sn","title":"ch395_get_recv_len_sn","text":"<p>Description</p> <p>Get the length received from socket</p> <p>Example</p> <pre><code> lda #$01 ; Socket 1\njsr ch395_get_recv_len_sn\n; check A and X for length received\nch395_connected:\n</code></pre> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : The length</p> </li> <li> <p>X Register : The length</p> </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_remot_ipp_sn","title":"ch395_get_remot_ipp_sn","text":"<p>Description</p> <p>Get remote ip connected to the socket</p> <p>Input</p> <ul> <li>Accumulator : The Socket for the ip to get</li> <li>X Register : The ptr (high) to store the ip</li> <li>Y Register : The ptr (low) to store the ip</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_get_socket_status_sn","title":"ch395_get_socket_status_sn","text":"<p>Description</p> <p>Returns in A socket status (close/open)</p> <p>Modify</p> <ul> <li>X Register </li> <li>Accumulator </li> </ul>"},{"location":"2024.1/assembly/#ch395_init","title":"ch395_init","text":"<p>Description</p> <p>Initialize ch395</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul>"},{"location":"2024.1/assembly/#ch395_open_socket_sn","title":"ch395_open_socket_sn","text":"<p>Description</p> <p>Open socket from arg</p> <p>Input</p> <ul> <li>Accumulator : Socket id</li> </ul> <p>Modify</p> <ul> <li>Y Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_read_recv_buf_sn","title":"ch395_read_recv_buf_sn","text":""},{"location":"2024.1/assembly/#ch395_reset_all","title":"ch395_reset_all","text":"<p>Description</p> <p>Reset ch395</p> <p>Example</p> <pre><code> jsr ch395_reset_all\n; Wait a bit\n</code></pre>"},{"location":"2024.1/assembly/#ch395_retran_period","title":"ch395_retran_period","text":"<p>Description</p> <p>Retran period</p> <p>Example</p> <pre><code> lda #$FF\nldx #$FF\njsr ch395_retran_period\nrts\n</code></pre> <p>Input</p> <ul> <li>Accumulator : Period </li> <li>X Register : Period </li> </ul> <p>Modify</p> <ul> <li>Y Register </li> </ul>"},{"location":"2024.1/assembly/#ch395_set_des_port_sn","title":"ch395_set_des_port_sn","text":""},{"location":"2024.1/assembly/#ch395_set_fun_para","title":"ch395_set_fun_para","text":"<p>Input</p> <ul> <li>Accumulator : Value </li> </ul> <p>Modify</p> <ul> <li>Y Register </li> <li>Accumulator </li> </ul>"},{"location":"2024.1/assembly/#ch395_set_gwip_addr","title":"ch395_set_gwip_addr","text":""},{"location":"2024.1/assembly/#ch395_set_ip_addr","title":"ch395_set_ip_addr","text":"<p>Description</p> <p>Set ip addr</p>"},{"location":"2024.1/assembly/#ch395_set_ip_addr_sn","title":"ch395_set_ip_addr_sn","text":"<p>Description</p> <p>Set Socket Ip address to connect with</p>"},{"location":"2024.1/assembly/#ch395_set_ipraw_pro_sn","title":"ch395_set_ipraw_pro_sn","text":"<p>Description</p> <p>Set ipraw protocol on socket</p>"},{"location":"2024.1/assembly/#ch395_set_mac_adress","title":"ch395_set_mac_adress","text":"<p>Description</p> <p>Set mac address</p>"},{"location":"2024.1/assembly/#ch395_set_proto_type_sn","title":"ch395_set_proto_type_sn","text":""},{"location":"2024.1/assembly/#ch395_set_retran_count","title":"ch395_set_retran_count","text":""},{"location":"2024.1/assembly/#ch395_set_sour_port_sn","title":"ch395_set_sour_port_sn","text":""},{"location":"2024.1/assembly/#ch395_tcp_connect_sn","title":"ch395_tcp_connect_sn","text":""},{"location":"2024.1/assembly/#ch395_tcp_disconnect_sn","title":"ch395_tcp_disconnect_sn","text":""},{"location":"2024.1/assembly/#ch395_tcp_listen_sn","title":"ch395_tcp_listen_sn","text":""},{"location":"2024.1/assembly/#ch395_write_send_buf_sn","title":"ch395_write_send_buf_sn","text":""},{"location":"2024.1/c/","title":"C","text":""},{"location":"2024.1/c/#c","title":"C","text":""},{"location":"2024.1/c/#unsigned-char-ch395_check_exist","title":"unsigned char ch395_check_exist();","text":""},{"location":"2024.1/c/#void-ch395_clear_recv_buf_snunsigned-char-id_socket","title":"void ch395_clear_recv_buf_sn(unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Clear receive buffer</p>"},{"location":"2024.1/c/#oid-ch395_close_socket_snunsigned-char-id_socket","title":"oid ch395_close_socket_sn(unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Close socket</p>"},{"location":"2024.1/c/#unsigned-char-ch395_get_dhcp_status","title":"unsigned char ch395_get_dhcp_status();","text":"<p>Description</p> <p>Get dhcp status</p>"},{"location":"2024.1/c/#unsigned-int-ch395_get_glob_int_status","title":"unsigned int ch395_get_glob_int_status();","text":"<p>Description</p> <p>Get General interrupt Status</p>"},{"location":"2024.1/c/#unsigned-char-ch395_get_ic_ver","title":"unsigned char ch395_get_ic_ver();","text":"<p>Description</p> <p>Get ch395 firmware version</p>"},{"location":"2024.1/c/#unsigned-char-ch395_get_int_status_snunsigned-char-id_socket","title":"unsigned char ch395_get_int_status_sn(unsigned char ID_SOCKET);","text":"<p>Description</p> <p>Check interrupt socket status</p>"},{"location":"2024.1/c/#void-ch395_get_ip_infunsigned-char-ip_infos","title":"void ch395_get_ip_inf(unsigned char ip_infos[]);","text":"<p>Description</p> <p>Get ip info</p>"},{"location":"2024.1/c/#void-ch395_get_mac_adressunsigned-char-macaddress","title":"void ch395_get_mac_adress(unsigned char macaddress[]);","text":"<p>Description</p> <p>Get mac address</p>"},{"location":"2024.1/c/#unsigned-char-ch395_get_phy_status","title":"unsigned char ch395_get_phy_status();","text":"<p>Description</p> <p>Get physical status</p>"},{"location":"2024.1/c/#void-ch395_get_recv_len_snunsigned-char-id_socket","title":"void ch395_get_recv_len_sn(unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Get the length received from socket</p>"},{"location":"2024.1/c/#void-ch395_get_remot_ipp_snunsigned-char-ptr-unsigned-char-socket","title":"void ch395_get_remot_ipp_sn(unsigned char *ptr, unsigned char socket);","text":"<p>Description</p> <p>Get remote ip connected to the socket</p>"},{"location":"2024.1/c/#unsigned-int-ch395_get_socket_status_snunsigned-char-id_socket","title":"unsigned int ch395_get_socket_status_sn(unsigned char ID_SOCKET);","text":""},{"location":"2024.1/c/#void-ch395_init","title":"void ch395_init();","text":"<p>Description</p> <p>Initialize ch395</p>"},{"location":"2024.1/c/#void-ch395_open_socket_snunsigned-char-id_socket","title":"void ch395_open_socket_sn(unsigned char ID_SOCKET)","text":""},{"location":"2024.1/c/#void-ch395_read_recv_buf_snunsigned-char-buffer-unsigned-int-lengthunsigned-char-id_socket","title":"void ch395_read_recv_buf_sn(unsigned char *buffer, unsigned int length,unsigned char ID_SOCKET);","text":""},{"location":"2024.1/c/#void-ch395_reset_all","title":"void ch395_reset_all()","text":"<p>Description</p> <p>Reset ch395</p>"},{"location":"2024.1/c/#void-ch395_set_fun_paraunsigned-char-flag","title":"void ch395_set_fun_para(unsigned char flag)","text":"<p>Description</p> <p>Set ip addr</p>"},{"location":"2024.1/c/#void-ch395_set_ip_addr_snunsigned-char-ip_addr-unsigned-char-id_socket","title":"void ch395_set_ip_addr_sn(unsigned char ip_addr[], unsigned char ID_SOCKET)","text":"<p>Description</p> <p>Set ipraw protocol on socket</p>"},{"location":"2024.1/c/#void-ch395_set_proto_type_snunsigned-char-protounsigned-char-id_socket","title":"void ch395_set_proto_type_sn(unsigned char proto,unsigned char ID_SOCKET)","text":""},{"location":"2024.1/c/#_1","title":"C","text":""}]}